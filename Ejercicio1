package Ejercicio_1;

import java.util.ArrayList;

public class Agenda {

	private ArrayList<Persona> agenda;

	public Agenda() {
		this.agenda = new ArrayList<Persona>();
	}

	private Persona buscarPersona(String dni) {
		Persona personaEncontrada = null;
		int pos = 0;

		while (pos < this.agenda.size() && personaEncontrada == null)
			if (this.agenda.get(pos).getDni().equals(dni)) // agenda le pide a pos una Persona, a la que se le pide el
															// DNI
				personaEncontrada = this.agenda.get(pos); // asigna a personaEncontrada en objeto Persona que hay en la
															// posición pos, mediante get()
			else
				pos++;

		return personaEncontrada;
	}

	public boolean agregarPersona(String nombre, String apellido, String dni, int dia, int mes, int anio, String calle,
			String altura, String barrio) {
		boolean pudo = false;

		Persona personaaAgregar = null;

		personaaAgregar = buscarPersona(dni); // si no la encuentre, devuelve null

		if (personaaAgregar == null)
			this.agenda.add(new Persona(nombre, apellido, dni, dia, mes, anio, calle, altura, barrio)); // método add()
		pudo = true;

		return pudo;
	}

	public Persona removerPersona(String dni) {
		Persona personaaRemover = null;

		personaaRemover = buscarPersona(dni); // queda null si no existe o la personaaRemover si existe

		if (personaaRemover != null)
			this.agenda.remove(personaaRemover);

		return personaaRemover;
	}

	public boolean modificarDomicilio(String dni, String calle, String altura, String barrio) { //NO ANDA
		boolean pude = false;
		Persona personaBuscada;
		personaBuscada = buscarPersona(dni);

		if (personaBuscada != null) {
			personaBuscada.getDomicilio().setCalle(calle);
			personaBuscada.getDomicilio().setAltura(altura);
			personaBuscada.getDomicilio().setBarrio(barrio);
			pude = true;
		}
	
		else 
			System.out.println("No existe esa persona");

		return pude;
	}

	public void listarPersonas() { 
		
		for (Persona persona: agenda) {
			System.out.println(persona);
		}
			
		
//		int i;
//		for (i = 0; i < this.agenda.size(); i++) {
//			System.out.println(this.agenda.get(i));
//		}
	}

	public Persona devolverultimo() {
		Persona ultimaPersona = null;
		if (agenda.size()>0)
			ultimaPersona = this.agenda.get(this.agenda.size() - 1); // toma a la última persona

		return ultimaPersona;
	}

	public void eliminarTodosElementosAMano() {
		int i;
		for (i = 0; i < this.agenda.size(); i++) { // por qué queda uno?
			this.agenda.remove(i);
		}
		
//		for (Persona i:agenda)
//			this.agenda.remove(i);
//
	}

	@Override
	public String toString() {
		return "Agenda [agenda=" + agenda  + "\n" + "]" ;
	}
	
	
}
